name: pyroomacoustics

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]
    steps:
    - uses: actions/checkout@v3
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build package
      run: |
        python -m pip install -e .
    - name: Test with pytest
      run: |
        pip install -U pytest setuptools wheel twine
        pytest
    - name: Test the universal wheels
      if: matrix.os == 'ubuntu-latest'
      run: |
        python setup.py sdist
        twine check dist/*
    - name: Test the binary wheels
      if: matrix.os != 'ubuntu-latest'
      run: |
        python setup.py bdist_wheel
        twine check dist/*
    - name: Publish sdist to pypi
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --skip-existing dist/*
    - name: Publish bdist to pypi
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v') && matrix.os != 'ubuntu-latest'
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload --skip-existing dist/*
    - name: Publish sdist to pypi-test
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/test-') && matrix.os == 'ubuntu-latest'
      env:
        TWINE_USERNAME: ${{ secrets.PYPITEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPITEST_PASSWORD }}
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
      run: |
        twine upload --skip-existing dist/*
    - name: Publish bdist to pypi-test
      if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/test-') && matrix.os != 'ubuntu-latest'
      env:
        TWINE_USERNAME: ${{ secrets.PYPITEST_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPITEST_PASSWORD }}
        TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
      run: |
        twine upload --skip-existing dist/*
